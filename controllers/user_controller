const express = require('express');
const router = express.Router();
const pool = require('../db');
const bcrypt = require('bcrypt');

router.get('/users/new', (req, res) => {
    res.render('create_account', {message: 'Give Us Your Details'});
})

//creating new user
router.post('/users', (req, res) => {
    const saltRounds = 10;
    //encrypting user password
    bcrypt.hash(req.body.password, saltRounds, function(err, hash) {
        const sql = `insert into users (username, user_name, location, email, password_digest) values ($1, $2, $3, $4, $5);`
        //adding user to database.
        pool.query(sql, [req.body.username, req.body.user_name, req.body.location, req.body.email, hash ], (err, dbRes) => {
            if (err) {
                console.log(err);
                res.render('create_account', {message: 'User with That Email/Username Already Exists'});
            } else {
                req.session.username = req.body.username;
                res.redirect('/');
            }
        })
    })
})

//user profile page
router.get('/users/:username', (req, res) => {
    const sql = `select * from users where username ilike '%${req.params.username}%';`;
    pool.query(sql, (err, dbRes) => {
        const user = dbRes.rows[0];
        const sqlSearch = `select * from gigs where posted_by = '${user.username}';`;
        pool.query(sqlSearch, (err, userGigs) => {
            if (err) console.log(err);
            const gigs = userGigs.rows;
            res.render('user_page', { gigs,});
        })
    })
})



module.exports = router;
